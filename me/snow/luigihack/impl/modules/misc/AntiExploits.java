//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\L4J\Desktop\deobf workspace\1.12 stable mappings"!

//Decompiled by Procyon!

package me.snow.luigihack.impl.modules.misc;

import me.snow.luigihack.impl.modules.*;
import me.snow.luigihack.api.setting.*;
import me.snow.luigihack.api.event.events.*;
import net.minecraft.network.*;
import net.minecraft.network.play.client.*;
import net.minecraft.item.*;
import net.minecraft.entity.player.*;
import net.minecraft.network.play.server.*;
import net.minecraftforge.fml.common.eventhandler.*;

public class AntiExploits extends Module
{
    private final /* synthetic */ Setting<Boolean> Achunkban;
    private final /* synthetic */ Setting<Boolean> log4j;
    private final /* synthetic */ Setting<Boolean> AbookBan;
    
    public AntiExploits() {
        super("AntiExploits", "save you from exploit", Category.MISC, true, false, false);
        this.Achunkban = (Setting<Boolean>)this.register(new Setting("AntiChunkBan", (Object)false));
        this.AbookBan = (Setting<Boolean>)this.register(new Setting("AntiBookBan", (Object)false));
        this.log4j = (Setting<Boolean>)this.register(new Setting("AntiLog4j", (Object)false));
    }
    
    @SubscribeEvent
    public void onPacketReceive(final PacketEvent.Receive receive) {
        if (this.Achunkban.getValue()) {
            final Packet packet = receive.getPacket();
            if (packet instanceof SPacketBlockChange) {
                receive.setCanceled(true);
            }
            else if (packet instanceof SPacketUpdateTileEntity) {
                receive.setCanceled(true);
            }
            else if (packet instanceof SPacketMultiBlockChange) {
                receive.setCanceled(true);
            }
            else if (packet instanceof SPacketChunkData) {
                final SPacketChunkData sPacketChunkData = (SPacketChunkData)packet;
                if (AntiExploits.mc.world.getChunk(sPacketChunkData.getChunkX(), sPacketChunkData.getChunkZ()).isLoaded()) {
                    receive.setCanceled(true);
                }
            }
            else if (packet instanceof SPacketBlockAction) {
                receive.setCanceled(true);
            }
        }
    }
    
    @SubscribeEvent
    public void onLeavingDeathEvent(final PacketEvent.Receive receive) {
        if (this.AbookBan.getValue()) {
            if (!(receive.getPacket() instanceof CPacketClickWindow)) {
                return;
            }
            final CPacketClickWindow cPacketClickWindow = (CPacketClickWindow)receive.getPacket();
            if (!(cPacketClickWindow.getClickedItem().getItem() instanceof ItemWrittenBook)) {
                return;
            }
            receive.isCanceled();
            AntiExploits.mc.player.openContainer.slotClick(cPacketClickWindow.getSlotId(), cPacketClickWindow.getUsedButton(), cPacketClickWindow.getClickType(), (EntityPlayer)AntiExploits.mc.player);
        }
    }
    
    @SubscribeEvent(priority = EventPriority.HIGHEST)
    public void onPacketRecieve(final PacketEvent.Receive receive) {
        final String getUnformattedText;
        if ((boolean)this.log4j.getValue() && receive.getPacket() instanceof SPacketChat && ((getUnformattedText = ((SPacketChat)receive.getPacket()).getChatComponent().getUnformattedText()).contains("${") || getUnformattedText.contains("$<") || getUnformattedText.contains("$:-") || getUnformattedText.contains("jndi:ldap"))) {
            receive.setCanceled(true);
        }
    }
}
